version: '3.4'

services:
  rabbitmq:
    image: rabbitmq:3.6.15-management
    ports:
      - 15672:15672
      - 5672

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-GA-ubuntu-16.04
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Pass@Word1
    ports:
      - 1433

  redis:
    image: redis:6.2.1
    ports:
    - 6379:6379
    
  jaeger:
    image: jaegertracing/all-in-one
    ports:
    - 5775:5775/udp
    - 6831:6831/udp
    - 6832:6832/udp
    - 5778:5778
    - 16686:16686
    - 14268:14268
    - 19411:19411

  app1:
    build:
      context: ./App1.WebApi
    ports:
      - "5000:80"
    depends_on: 
      - rabbitmq
      - jaeger
      - app2
    environment:
      Jaeger__AgentHost: jaeger
      Jaeger__AgentPort: 6831
      RabbitMq__Host: rabbitmq
      App2Endpoint: http://app2/dummy

  app2:
    build:
      context: ./App2.WebApi
    ports:
      - "5001:80"
    depends_on: 
      - rabbitmq
      - jaeger
      - sqlserver
    environment:
      Jaeger__AgentHost: jaeger
      Jaeger__AgentPort: 6831
      RabbitMq__Host: rabbitmq
      SqlDbConnString: server=sqlserver;user id=sa;password=Pass@Word1;
  
  app3:
    stdin_open: true
    tty: true
    build:
      context: ./App3.RabbitConsumer.Console
    depends_on: 
      - rabbitmq
      - jaeger
      - app2
    entrypoint: ["./wait.sh", "30", "dotnet", "App3.RabbitConsumer.Console.dll"]
    environment:
      Jaeger__AgentHost: jaeger
      Jaeger__AgentPort: 6831
      RabbitMq__Host: rabbitmq
      App2UriEndpoint: http://app2

  app4:
    build:
      context: ./App4.RabbitConsumer.HostedService
    depends_on: 
      - rabbitmq
      - jaeger
      - redis
    entrypoint: ["./wait.sh", "30", "dotnet", "App4.RabbitConsumer.HostedService.dll"]
    environment:
      Jaeger__AgentHost: jaeger
      Jaeger__AgentPort: 6831
      RabbitMq__Host: rabbitmq
      Redis__Host: redis
      Redis__Port: 6379